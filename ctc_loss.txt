#[test]
fn test_ctc_loss() {
    let input = Tensor::<TestBackend, 3>::from_data([[[-4.104, -3.565, -2.806, -1.461, -1.830, -3.225, -3.299, -1.599, -4.128, -1.574], [-3.406, -2.458, -2.745, -3.262, -0.502, -3.152, -2.808, -3.723, -4.118, -3.515], [-2.728, -1.788, -2.883, -2.450, -3.592, -3.089, -3.906, -1.734, -1.206, -2.886], [-3.219, -2.135, -1.919, -1.445, -4.329, -3.511, -2.499, -1.734, -2.242, -2.973], [-1.182, -3.210, -2.097, -2.367, -2.297, -3.647, -1.723, -4.006, -4.140, -2.331], [-1.877, -3.460, -2.118, -3.079, -3.797, -3.412, -2.841, -1.173, -2.043, -2.339], [-2.721, -1.470, -3.009, -1.692, -2.589, -3.505, -3.961, -3.002, -2.268, -1.643], [-2.766, -4.161, -2.948, -1.417, -3.215, -2.488, -3.442, -1.146, -4.750, -1.932], [-2.473, -5.474, -2.968, -2.373, -2.517, -4.045, -2.606, -3.085, -4.935, -0.613], [-2.990, -3.064, -1.149, -3.166, -3.637, -2.464, -3.286, -2.288, -2.012, -1.832], [-3.048, -2.087, -1.750, -3.616, -2.842, -3.668, -1.542, -3.058, -2.625, -1.557], [-2.589, -3.447, -1.181, -2.201, -2.415, -2.184, -3.507, -2.817, -2.429, -2.347], [-2.740, -2.916, -3.475, -2.165, -1.699, -3.024, -2.210, -4.075, -1.118, -2.982], [-1.748, -2.333, -4.623, -2.759, -2.963, -2.539, -2.999, -1.771, -1.232, -4.324], [-1.952, -1.405, -4.196, -3.606, -4.367, -3.759, -2.294, -2.491, -2.116, -1.468], [-2.668, -3.972, -3.491, -2.120, -3.713, -2.705, -0.681, -2.234, -3.102, -4.438], [-1.911, -1.799, -2.894, -2.676, -3.588, -2.171, -3.556, -1.489, -3.584, -1.975], [-2.398, -1.321, -3.159, -2.640, -3.206, -2.486, -1.753, -2.942, -1.785, -4.534], [-4.346, -3.150, -3.461, -3.596, -3.272, -1.549, -1.114, -1.688, -3.941, -2.277], [-1.372, -2.381, -3.971, -2.722, -2.887, -1.561, -3.179, -1.739, -2.626, -4.268], [-3.702, -1.718, -2.810, -2.039, -1.769, -3.961, -2.997, -2.537, -1.610, -2.443], [-2.426, -3.144, -3.079, -2.309, -3.606, -2.923, -1.260, -2.821, -1.450, -2.744], [-1.969, -1.765, -2.053, -2.996, -2.072, -3.365, -3.569, -3.519, -1.853, -1.996], [-3.006, -4.303, -2.000, -1.926, -3.099, -2.476, -2.598, -1.631, -1.486, -3.495], [-3.455, -3.355, -1.427, -3.377, -3.816, -1.393, -3.002, -2.844, -1.346, -3.866], [-2.823, -3.578, -3.165, -1.510, -2.490, -2.283, -3.848, -1.471, -2.574, -1.985], [-2.359, -1.131, -2.473, -2.688, -3.165, -3.699, -3.405, -2.611, -3.170, -1.538], [-2.128, -4.777, -1.141, -3.756, -3.239, -3.077, -3.191, -2.042, -1.990, -1.991], [-3.186, -3.415, -2.124, -3.975, -2.335, -2.933, -4.268, -0.982, -2.973, -1.621], [-3.706, -2.094, -2.368, -1.340, -3.770, -1.927, -3.251, -2.635, -1.707, -3.315]]]);
    let target = Tensor::<TestBackend, 1, Int>::from_data([7]);
    let input_lengths = Tensor::<TestBackend, 1, Int>::from_data([30]);
    let target_lengths = Tensor::<TestBackend, 1, Int>::from_data([1]);
    let expected_res = Data::from([69.59415435791016]);

    let ctc_loss = CTCLoss::<TestBackend>::new(0);
    let res = ctc_loss.forward(
        input,
        target,
        input_lengths,
        target_lengths,
        Some(Reduction::Sum)
    );
    
    res.to_data().assert_approx_eq(&expected_res, 3);
}